# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: auth.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\nauth.proto\"@\n\x0bUserRequest\x12\r\n\x05\x65mail\x18\x01 \x01(\t\x12\x10\n\x08username\x18\x02 \x01(\t\x12\x10\n\x08password\x18\x03 \x01(\t\"Q\n\x13UserCreatedResponse\x12\n\n\x02id\x18\x01 \x01(\t\x12\r\n\x05\x65mail\x18\x02 \x01(\t\x12\x10\n\x08username\x18\x03 \x01(\t\x12\r\n\x05token\x18\x04 \x01(\t2D\n\x0cRegistration\x12\x34\n\x0cregistration\x12\x0c.UserRequest\x1a\x14.UserCreatedResponse\"\x00\x62\x06proto3')



_USERREQUEST = DESCRIPTOR.message_types_by_name['UserRequest']
_USERCREATEDRESPONSE = DESCRIPTOR.message_types_by_name['UserCreatedResponse']
UserRequest = _reflection.GeneratedProtocolMessageType('UserRequest', (_message.Message,), {
  'DESCRIPTOR' : _USERREQUEST,
  '__module__' : 'auth_pb2'
  # @@protoc_insertion_point(class_scope:UserRequest)
  })
_sym_db.RegisterMessage(UserRequest)

UserCreatedResponse = _reflection.GeneratedProtocolMessageType('UserCreatedResponse', (_message.Message,), {
  'DESCRIPTOR' : _USERCREATEDRESPONSE,
  '__module__' : 'auth_pb2'
  # @@protoc_insertion_point(class_scope:UserCreatedResponse)
  })
_sym_db.RegisterMessage(UserCreatedResponse)

_REGISTRATION = DESCRIPTOR.services_by_name['Registration']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _USERREQUEST._serialized_start=14
  _USERREQUEST._serialized_end=78
  _USERCREATEDRESPONSE._serialized_start=80
  _USERCREATEDRESPONSE._serialized_end=161
  _REGISTRATION._serialized_start=163
  _REGISTRATION._serialized_end=231
# @@protoc_insertion_point(module_scope)
